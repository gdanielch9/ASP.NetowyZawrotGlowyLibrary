@model IEnumerable<Library.Models.Book>
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.Action("Create")
</p>

<form id="search-form" method="get" data-ajax="true" data-ajax-target="#booklist-section" data-ajax-update="#booklist-section" >
    <div> Search Title</div>
                                               @* Action, where books are suggested *@
    <input id="SearchQuery" name="searchQuery" data-autocomplete-source="@Url.Action("BookSuggestions")" placeholder="Enter Title"/> 
    <input type="submit" value="Search" />
</form>

    @using (Ajax.BeginForm( new AjaxOptions()
    {
        UpdateTargetId = "booklist-section",                    // element with id = "booklist-section" will be upgraded asynch (it is in _BookList.cshtml)
        HttpMethod = "Get",
    }))
    {
    <div>
        <div>Select genre you are interesting</div>
        @Html.DropDownList("searchGenreId", (IEnumerable<SelectListItem>)ViewBag.Genre)
        <input type="submit" value="Search" />
    </div>
}

@Html.Partial("_BookList")


Click to check actual time
<input type="submit" value="Button" id="ButtonID" class="btn btn-default" />
<p id="rData">
    I am waiting for click...
</p>

@section scripts
{
<script type="text/jscript">


    $('#createButton').click(function () {                          // when "Create New" button was pressed
        $("#userMessage").html("");                                     // clear message
    })
    function Success() {                                            // when new book was properly added
        $("form")[0].reset();                                           // pro forma, reset poles
        $("#userMessage").html(" New book was created properly");       // pro forma, show message
        setTimeout(function () {                                        // hide modal after 1000 seconds
            $("#createModal").modal('hide').fadeIn('fast');             
        }, 1000);
        ;
        //alert(result + " was created properly");                      // message in separated window
    }
    function Failure() {                                            // when new book was not properly added
        $("#userMessage").html("Occured some mistake...");
    }
    $('#ButtonID').click(function () {                              // when "Button" was added
        var url = "Books/TellMeDate";
        $.get(url, null, function (data) {                              // call function fram url and insert to div (or other element) with id = "rData"
            $("#rData").html(data);
        });
    })
    


</script>
}
<script type="text/jscript">
    var setupAutoComplete = function () {
        var $input = $("#SearchQuery");

        var options = {
            source: $input.attr("data-autocomplete-source"),
            select: function (event, ui) {
                var $input = $("#SearchQuery");
                $input.val(ui.item.label);
                var $form = $input.parents("form:first");
                $form.submit();
            }
        };
        $input.autocomplete(options)
    };
    setupAutoComplete();
</script>
